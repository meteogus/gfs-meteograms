name: Trigger GitHub Meteogram Workflow

on:
  push:                     # Run on every push to main
    branches: [main]
  pull_request:             # Run on pull requests targeting main
    branches: [main]
  workflow_dispatch:        # Allow manual run from GitHub UI
  repository_dispatch:      # Allow external API trigger
    types: [run-meteograms]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v4

      - name: ✅ Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: ✅ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install paramiko

      - name: ✅ Determine latest GFS run hour
        id: gfs_run
        run: |
          hour=$(date -u +"%H")
          if ((hour >= 0 && hour < 6)); then
              run_hour="00"
          elif ((hour >= 6 && hour < 12)); then
              run_hour="06"
          elif ((hour >= 12 && hour < 18)); then
              run_hour="12"
          else
              run_hour="18"
          fi
          echo "🕒 Current UTC hour: $hour"
          echo "📦 Using GFS run hour: $run_hour"
          echo "run_hour=$run_hour" >> $GITHUB_ENV

      - name: ✅ Run meteogram scripts
        run: |
          python athens.py
          python kiato.py
          python lamia.py
          python london.py
        env:
          RUN_HOUR: ${{ env.run_hour }}

      - name: ✅ Upload images via SFTP with paramiko
        if: ${{ secrets.SFTP_HOST && secrets.SFTP_USER && secrets.SFTP_PASS }}
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USER: ${{ secrets.SFTP_USER }}
          SFTP_PASS: ${{ secrets.SFTP_PASS }}
          SFTP_FOLDER: ${{ secrets.SFTP_FOLDER }}
          RUN_HOUR: ${{ env.run_hour }}
        run: |
          python - <<EOF
          import paramiko
          import os
          import sys

          run_hour = os.getenv('RUN_HOUR', '00')
          print(f"🕒 Using run_hour: {run_hour}")

          files = [
              f"athens{run_hour}.png",
              f"kiato{run_hour}.png",
              f"lamia{run_hour}.png",
              "london.png"  # static filename
          ]

          host = os.getenv('SFTP_HOST')
          port = int(os.getenv('SFTP_PORT', '22'))
          user = os.getenv('SFTP_USER')
          password = os.getenv('SFTP_PASS')
          folder = os.getenv('SFTP_FOLDER', '/').rstrip('/')

          print(f"📡 Connecting to {host}:{port} as {user} ...")
          try:
              transport = paramiko.Transport((host, port))
              transport.connect(username=user, password=password)
              sftp = paramiko.SFTPClient.from_transport(transport)
          except Exception as e:
              print(f"❌ Failed to connect or authenticate: {e}")
              sys.exit(1)

          for f in files:
              try:
                  local_path = f
                  remote_path = f"{folder}/{f}"
                  print(f"⬆️ Uploading {local_path} to {remote_path} ...")
                  sftp.put(local_path, remote_path)
              except Exception as e:
                  print(f"❌ Failed to upload {f}: {e}")

          sftp.close()
          transport.close()
          print("✅ All files uploaded successfully.")
          EOF

      - name: ⚠️ Skip upload if secrets missing
        if: ${{ !secrets.SFTP_HOST }}
        run: echo "⚠️ SFTP credentials not set. Skipping upload step."
