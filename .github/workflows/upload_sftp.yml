name: Run and Upload Meteograms via SFTP

on:
  schedule:
    - cron: "0 1,7,13,19 * * *"  # Runs at 01, 07, 13, 19 UTC daily
  workflow_dispatch:             # Allow manual trigger in GitHub

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install paramiko

      # ✅ Set run_hour based on cron schedule
      - name: Determine GFS run hour
        id: gfs_run
        run: |
          hour=$(date -u +"%H")
          case "$hour" in
            "01") run_hour="00" ;;
            "07") run_hour="06" ;;
            "13") run_hour="12" ;;
            "19") run_hour="18" ;;
            *) echo "❌ Unexpected cron hour: $hour" && exit 1 ;;
          esac
          echo "GFS run hour: $run_hour"
          echo "run_hour=$run_hour" >> $GITHUB_ENV

      # ✅ Run Python scripts with run_hour passed as ENV
      - name: Run meteogram scripts
        run: |
          python athens.py
          python kiato.py
          python lamia.py
          python london.py
        env:
          RUN_HOUR: ${{ env.run_hour }}

      # ✅ Upload dynamically named files (athens/kiato/lamia) + static london.png
      - name: Upload images via SFTP with paramiko
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_PORT: ${{ secrets.SFTP_PORT }}
          SFTP_USER: ${{ secrets.SFTP_USER }}
          SFTP_PASS: ${{ secrets.SFTP_PASS }}
          SFTP_FOLDER: ${{ secrets.SFTP_FOLDER }}
          RUN_HOUR: ${{ env.run_hour }}
        run: |
          python - <<EOF
          import paramiko
          import os
          import sys

          run_hour = os.getenv('RUN_HOUR', '00')
          print(f"🕒 Using run_hour: {run_hour}")

          files = [
              f"athens{run_hour}.png",
              f"kiato{run_hour}.png",
              f"lamia{run_hour}.png",
              "london.png"  # static filename
          ]

          host = os.getenv('SFTP_HOST')
          port = int(os.getenv('SFTP_PORT', '22'))
          user = os.getenv('SFTP_USER')
          password = os.getenv('SFTP_PASS')
          folder = os.getenv('SFTP_FOLDER', '/').rstrip('/')

          if not all([host, user, password]):
              print("❌ Missing SFTP credentials")
              sys.exit(1)

          print(f"📡 Connecting to {host}:{port} as {user} ...")
          try:
              transport = paramiko.Transport((host, port))
              transport.connect(username=user, password=password)
              sftp = paramiko.SFTPClient.from_transport(transport)
          except Exception as e:
              print(f"❌ Failed to connect or authenticate: {e}")
              sys.exit(1)

          for f in files:
              try:
                  local_path = f
                  remote_path = f"{folder}/{f}"
                  print(f"⬆️ Uploading {local_path} to {remote_path} ...")
                  sftp.put(local_path, remote_path)
              except Exception as e:
                  print(f"❌ Failed to upload {f}: {e}")

          sftp.close()
          transport.close()
          print("✅ All files uploaded successfully.")
          EOF
